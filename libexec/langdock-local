#!//usr/bin/env bash
# Summary: Set or show the local application-specific $LANGDOCK version
# Usage: ${LANGDOCK}dock local
#        ${LANGDOCK}dock local --unset
#
# Set or show $LANGDOCK local version setted in .envrc files
# By default, show $LANGDOCK version
#
# When you run a $LANGDOCK command, ${LANGDOCK}dock will look for a
# '.${LANGDOCK}-version' file in the current
# directory and each parent directory. If no such file is found in the
# tree, ${LANGDOCK}dock will use the global ${LANGDOCK} version specified with '${LANGDOCK}dock global'.
#
# <version> should be a string matching a $LANGDOCK version known to ${LANGDOCK}dock
# see '${LANGDOCK}dock versions'
#
# More information at https://github.com/lucasdc6/langdock#readme

set -e
[ -n "$LANGDOCK_DEBUG" ] && set -x

# Set config variables
COMMAND=`basename $0 | cut -d- -f2`

# Provide langdock completions
if [ "$1" = "--complete" ]; then
  if echo $@ | grep -v "\-\-help" > /dev/null; then
    echo system
    echo --unset
    [ -f $LANGDOCKPATH/etc/$LANGDOCK/versions ] && cat $LANGDOCKPATH/etc/$LANGDOCK/versions
  fi
  if [ "$#" -eq 1 ]; then
    echo --help
  fi
  exit 0
fi

function upsearch {
  slashes=${PWD//[^\/]/}
  directory="$PWD"
  for (( n=${#slashes}; n>0; --n ))
  do
    test -e "$directory/$1" && echo "$directory/$1" && return
    directory="$directory/.."
  done
}

# Function to change local version of langdock
# Arguments
#   1: version to set as local
function change_local {
  LANGDOCKVERSION=`upsearch ".$LANGDOCK-version"`
  if [ "$1" ]
  then
    langdock-prefix $1 > /dev/null
    echo $1 > ".$LANGDOCK-version"
    echo "Local $LANGDOCK version setted to $1 in file .$LANGDOCK-version"
  elif [ -n "$LANGDOCKVERSION" ]
  then
    cat $LANGDOCKVERSION
    exit
  else
    echo "$PROG: no local version configured for this directory"
    exit 1
  fi
}

# Config getopt
TEMP=`getopt -o '' --long unset -n $PROG -- "$@"`
eval set -- "$TEMP"

OPTION=set

# Parse arguments
while true ; do
  case "$1" in
    --unset)
      OPTION=unset
      shift;;
    --) shift ; break ;;
    *) echo "Internal error!" ; exit 1 ;;
  esac
done

case "$OPTION" in
  set)
    change_local $1
  ;;
  unset)
    LANGDOCKVERSION=`upsearch ".$LANGDOCK-version"`
    rm $LANGDOCKVERSION
esac
