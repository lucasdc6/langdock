#!//usr/bin/env bash
# Summary: Set or show the global $LANGDOCK version
# Usage: ${LANGDOCK}dock global
#        ${LANGDOCK}dock global <version>
#        ${LANGDOCK}dock global --unset
#
# Set or show $LANGDOCK global version setted
#
# You can override the global version at any time by setting a
# directory-specific version with '${LANGDOCK}dock local'.
#
# <version> should be a string matching a $LANGDOCK version known to ${LANGDOCK}dock
# see '${LANGDOCK}dock versions'
#
# More information at https://github.com/lucasdc6/langdock#readme

set -e
[ -n "$LANGDOCK_DEBUG" ] && set -x

# Set config variables
COMMAND=`basename $0 | cut -d- -f2`

# Provide langdock completions
if [ "$1" = "--complete" ]; then
  if echo $@ | grep -v "\-\-help" > /dev/null; then
    echo system
    echo --unset
    [ -f $LANGDOCKPATH/etc/$LANGDOCK/versions ] && cat $LANGDOCKPATH/etc/$LANGDOCK/versions
  fi
  if [ "$#" -eq 1 ]; then
    echo --help
  fi
  exit 0
fi

# Function to change global version of langdock
# Arguments
#   1: version to set as global
function change_global {
  if [ "$1" ]
  then
    langdock-prefix $1 > /dev/null
    echo $1 > $LANGDOCKPATH/etc/$LANGDOCK/version
    echo "Global $LANGDOCK version setted to $1 in file $LANGDOCKPATH/etc/$LANGDOCK/version"
  elif [ -f "$LANGDOCKPATH/etc/$LANGDOCK/version" ]
  then
    cat $LANGDOCKPATH/etc/$LANGDOCK/version
  else
    echo "$PROG: no $LANGDOCK global version configured"
    exit 1
  fi
}

# Config getopt
TEMP=`getopt -o u --long unset -n $PROG -- "$@"`
eval set -- "$TEMP"

# Parse arguments
while true ; do
  case "$1" in
    --unset)
      ACTION=unset
      shift;;
    --) shift ; break ;;
    *) echo "Internal error!" ; exit 1 ;;
  esac
done

if [ "$ACTION" = "unset" ]; then
  rm $LANGDOCKPATH/etc/$LANGDOCK/version
  exit 0
fi

change_global $1
