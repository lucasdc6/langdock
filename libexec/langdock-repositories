#!//usr/bin/env bash
# Summary: Manage repositories
# Usage: ${LANGDOCK}dock repositories -l/--list
#        ${LANGDOCK}dock repositories -a/--add <repository>
#        ${LANGDOCK}dock repositories -d/--delete <repository>
#
#  -l/--list    List all repositories
#  -a/--add     Add a repository
#  -d/--delete  Delete a repository
#
# <repository> should be a string matching a docker registry
#
# More information at https://github.com/lucasdc6/langdock#readme


set -e
[ -n "$LANGDOCK_DEBUG" ] && set -x

# Set config variables
COMMAND=`basename $0 | cut -d- -f2`

# Provide langdock completions
if [ "$1" = "--complete" ]; then
  if [ $# -gt 1 ]; then
    exit 0
  fi
  echo --list
  echo --add
  echo --delete
  echo --help
  exit 0
fi

LANGDOCK_REPOSITORY=${LANGDOCK_REPOSITORY:-$LANGDOCK}

# Avaiables repositories
if [ ! -f "$LANGDOCKPATH/etc/$LANGDOCK/repositories" ]
then
  echo -e "$LANGDOCKPATH/etc/$LANGDOCK/repositories missing\nDefault repositories setted"
  for REPOSITORY in `echo $LANGDOCK_REPOSITORY | tr : '\n'`; do
    echo "$REPOSITORY" >> "$LANGDOCKPATH/etc/$LANGDOCK/repositories"
  done
fi
LANGDOCK_IMAGES=( $(cat $LANGDOCKPATH/etc/$LANGDOCK/repositories) )

# Function to delete an elements from array
# Arguments
#   1: element
#   2: array
function delete_ary_elmt {
  local word=$1      # the element to search for & delete
  local aryref="$2[@]" # a necessary step since '${!$2[@]}' is a syntax error
  local arycopy=("${!aryref}") # create a copy of the input array
  local status=1
  for (( i = ${#arycopy[@]} - 1; i >= 0; i-- )); do # iterate over indices backwards
    elmt=${arycopy[$i]}
    [[ $elmt == $word ]] && unset "$2[$i]" && status=0 # unset matching elmts in orig. ary
  done
  return $status # return 0 if something was deleted; 1 if not
}

# Function to list all repos in file etc/<language>/repositories
function list_repos
{
  [ ${#LANGDOCK_IMAGES[@]} -eq 0 ] && (echo -e "Not repositories found.\nPlease add a repository with the option $PROG --add REPOSITORY"; exit 1)
  printf "Avaiables repositories:\n"
  printf "\t* %s\n" "${LANGDOCK_IMAGES[@]}"
}

# Function to add a repo to array LANGDOCK_IMAGES and file etc/<language>/repositories
# Arguments
#   1: repository name
function add_repo
{
  if [[ "${LANGDOCK_IMAGES[@]}" =~ "${1}" ]]
  then
    echo "$1 already in use"
  else
    LANGDOCK_IMAGES+=("$1")
    printf "%s\n" "${LANGDOCK_IMAGES[@]}" > $LANGDOCKPATH/etc/$LANGDOCK/repositories
    echo "$1 added successfully"
  fi
}

# Function to delete a repo from array LANGDOCK_IMAGES and file etc/<language>/repositories
# Arguments
#   1: repository name
function delete_repo
{
  if [[ "${LANGDOCK_IMAGES[@]}" =~ "${1}" ]]
  then
    delete_ary_elmt $1 LANGDOCK_IMAGES
    printf "%s\n" "${LANGDOCK_IMAGES[@]}" > $LANGDOCKPATH/etc/$LANGDOCK/repositories
    echo "$1 deleted successfully"
  else
    echo -e "$1 not found\n"
    list_repos
  fi
}

# Show help if non arguments passed to script
[ "$#" -eq 0 ] && ( langdock-help $COMMAND; exit 1)

# Config getopt
TEMP=`getopt -o l,a:,d: --long list,add:,delete: -n $PROG -- "$@"`
eval set -- "$TEMP"

# Parse arguments
while true ; do
  case "$1" in
    -l|--list)
      list_repos
      shift;;
    -a|--add)
      add_repo $2
      shift 2
      exit 0;;
    -d|--delete)
      delete_repo $2
      shift 2
      exit 0;;
    --) shift ; break ;;
    *) echo "Internal error!" ; exit 1 ;;
  esac
done
